-- Importar a biblioteca Roact
local Roact = require(game.ReplicatedStorage:WaitForChild("Roact"))

-- Configurações do Script
local Settings = {
    AutoFarm = true,
    AutoFruit = true,
    AutoBounty = true,
    AutoChest = true,
    AutoKill = true,
    Spectate = true,
    ShowFruitLocations = true,
    SelectFruit = true,
    InfiniteFragments = true,
    AllItems = true,
    FarmSpeed = 0.1, -- Velocidade do farm
    FruitCheckInterval = 10, -- Intervalo de verificação de frutas (em segundos)
    TeleportLocations = {
        ["Start Island"] = Vector3.new(100, 10, 200),
        ["Pirate Island"] = Vector3.new(500, 10, 600),
        ["Marine Fortress"] = Vector3.new(1000, 10, 1200)
    },
    Fruits = {"Mango", "Apple", "Banana", "Orange", "Pineapple"}, -- Lista de frutas
    InfiniteMoney = true, -- Geração de dinheiro infinito
    PlayerLocations = true, -- Localização dos jogadores
    AllGamepasses = true -- Todas as gamepasses, incluindo frutas permanentes
}

-- IDs dos gamepasses
local GamepassIDs = {
    Yoru = 6028786, -- ID para Yoru
    NotificadorDeFruta = 6738811, -- ID para Notificador de Fruta
    TwoXDrop = 7578721, -- ID para 2x Drop
    TwoXBounty = 6240746, -- ID para 2x Bounty
    TwoXMoney = 6028662, -- ID para 2x Money
    BarcoRapido = 6525589 -- ID para Barco Rápido
}

-- Função para criar a interface
local function createUI()
    local function Button(props)
        return Roact.createElement("TextButton", {
            Size = UDim2.new(1, -20, 0, 50),
            BackgroundColor3 = Color3.fromRGB(255, 0, 0),
            TextColor3 = Color3.fromRGB(255, 165, 0),
            Font = Enum.Font.SourceSansBold,
            TextSize = 24,
            Text = props.text,
            [Roact.Event.Activated] = props.onActivated
        })
    end

    local function SettingsUI(props)
        return Roact.createElement("Frame", {
            Size = UDim2.new(0, 400, 0, 600),
            Position = UDim2.new(0.5, -200, 0.5, -300),
            BackgroundColor3 = Color3.fromRGB(0, 0, 0),
            BorderSizePixel = 0,
        }, {
            UIListLayout = Roact.createElement("UIListLayout", {
                Padding = UDim.new(0, 10),
                FillDirection = Enum.FillDirection.Vertical,
                HorizontalAlignment = Enum.HorizontalAlignment.Center,
                VerticalAlignment = Enum.VerticalAlignment.Top,
            }),
            Title = Roact.createElement("TextLabel", {
                Text = "Script Settings",
                Size = UDim2.new(1, 0, 0, 50),
                BackgroundColor3 = Color3.fromRGB(255, 0, 0),
                TextColor3 = Color3.fromRGB(255, 165, 0),
                Font = Enum.Font.SourceSansBold,
                TextSize = 24,
            }),
            AutoFarmToggle = Roact.createElement(Button, {
                text = "Auto Farm: " .. tostring(Settings.AutoFarm),
                onActivated = function()
                    Settings.AutoFarm = not Settings.AutoFarm
                    props.updateUI()
                end
            }),
            InfiniteFragmentsToggle = Roact.createElement(Button, {
                text = "Infinite Fragments: " .. tostring(Settings.InfiniteFragments),
                onActivated = function()
                    Settings.InfiniteFragments = not Settings.InfiniteFragments
                    props.updateUI()
                end
            }),
            AllItemsToggle = Roact.createElement(Button, {
                text = "All Items: " .. tostring(Settings.AllItems),
                onActivated = function()
                    Settings.AllItems = not Settings.AllItems
                    props.updateUI()
                end
            }),
            GainLevelOnClick = Roact.createElement(Button, {
                text = "Gain Level on Click",
                onActivated = function()
                    local player = game.Players.LocalPlayer
                    if player and player:FindFirstChild("Level") then
                        player.Level.Value = player.Level.Value + 1
                    end
                end
            }),
            InfiniteMoneyToggle = Roact.createElement(Button, {
                text = "Infinite Money: " .. tostring(Settings.InfiniteMoney),
                onActivated = function()
                    Settings.InfiniteMoney = not Settings.InfiniteMoney
                    props.updateUI()
                end
            }),
            PlayerLocationsToggle = Roact.createElement(Button, {
                text = "Player Locations: " .. tostring(Settings.PlayerLocations),
                onActivated = function()
                    Settings.PlayerLocations = not Settings.PlayerLocations
                    props.updateUI()
                end
            }),
            AllGamepassesToggle = Roact.createElement(Button, {
                text = "All Gamepasses: " .. tostring(Settings.AllGamepasses),
                onActivated = function()
                    Settings.AllGamepasses = not Settings.AllGamepasses
                    props.updateUI()
                end
            }),
        })
    end

    local function updateUI()
        local ui = game.Players.LocalPlayer:FindFirstChild("PlayerGui")
        if ui then
            local screenGui = ui:FindFirstChild("ScriptUI")
            if screenGui then
                screenGui:Destroy()
            end
            Roact.mount(Roact.createElement(SettingsUI, { updateUI = updateUI }), ui, "ScriptUI")
        end
    end

    updateUI()
end

-- Função para gerar dinheiro infinito
local function generateInfiniteMoney()
    while Settings.InfiniteMoney do
        local player = game.Players.LocalPlayer
        if player and player:FindFirstChild("Money") then
            player.Money.Value = player.Money.Value + 1000
        end
        wait(1)
    end
end

-- Função para simular o "Auto Farm"
local function autoFarm()
    while Settings.AutoFarm do
        local player = game.Players.LocalPlayer
        if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            -- Simula a movimentação para um local
            player.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(100, 10, 200))
        end
        wait(Settings.FarmSpeed)
    end
end

-- Função para mostrar a localização dos jogadores
local function showPlayerLocations()
    while Settings.PlayerLocations do
        for _, player in pairs(game.Players:GetPlayers()) do
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                print(player.Name .. " está em: " .. tostring(player.Character.HumanoidRootPart.Position))
            end
        end
        wait(10)
    end
end

-- Função para desbloquear todas as gamepasses
local function unlockAllGamepasses()
    local MarketplaceService = game:GetService("MarketplaceService")
    local player = game.Players.LocalPlayer
    if player then
        for _, gamepassId in pairs(GamepassIDs) do
            local success, result = pcall(function()
                MarketplaceService:PromptGamePassPurchase(player, gamepassId)
            end)
            if not success then
                print("Falha ao tentar desbloquear gamepass com ID " .. tostring(gamepassId))
            end
        end
    end
end

-- Funções principais
local function startScript()
    if Settings.AutoFarm then
        spawn(autoFarm)
    end

    if Settings.InfiniteMoney then
        spawn(generateInfiniteMoney)
    end

    if Settings.PlayerLocations then
        spawn(showPlayerLocations)
    end

    if Settings.AllGamepasses then
        spawn(unlockAllGamepasses)
    end
end

-- Inicializar a interface e iniciar o script
createUI()
startScript()
